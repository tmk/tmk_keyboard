NeXT non-ADB Keyboard Converter
-------------------------------

Cable connector inside keyboard case:
+-----+
|Black|\
|Green|-\
|Yello|--\--------  to computer via Mini-Din 5a Connector
|Orang|--/--------
|Red  |-/
|Brown|/
+-----+

Black  - Ground to outer metal part of Mini Din 5a connector (not used)
Green  - Ground
Yellow - Power button signal 
Orange - Keyboard Out
Red    - Keyboard In
Brown  - Vcc

ATmega32u4 connections (pinout provided for Arduino Pro Micro):

Keyboard out (orange) : PD0 (pin 3)
Keyboard in  (red)    : PD1 (pin 2)
Power Button (yellow) : PD4 (pin 4)
Ground       (black)  : GND
Vcc          (brown)  : VCC

See attached next_timings.jpg file for a detailed illustration of NeXT keyboard protocol timings.

Power button signal line is normally high when the keyboard is powered/initialized.  It is pulled to ground when pressed.  The converter automatically translates this to a "normal" keypress with code 0x5A.  This connection is technically optional, the only side effect of not making this connection is the power key will do nothing.

Converter is based heavily on Ladyada's original "USB NeXT Keyboard with Arduino Micro" tutorial (http://learn.adafruit.com/usb-next-keyboard-with-arduino-micro/overview).  If you build this converter, show Adafruit some love and do it using an Arduino Micro (http://www.adafruit.com/products/1315) or their ATmega 32u4 Breakout Board (http://www.adafruit.com/products/296).  Arduino Micro should work fine using the Arduino Pro Micro configuration above, same pins numbers and everything.

TODO:
-----

I believe it might be possible to run the keyboard off of 3V; during testing I observed that the keyboard could sometimes function even without Vcc connected as long as the ground connection was good and the Keyboard In line was connected.  If that works it should be easy to do a Bluetooth conversion and run the keyboard right off of a LiPo battery without a boost circuit

Utilize second LED as status indicator for good initialization; also try to make hot plugging much more robust.

Figure a better use for the Power button.  Too easy to hit it by mistake to use for Suspend or Power Off - maybe move cap to different part of the board and consider that

Figure out a better use for the lock LEDs.  Right now they just light up when you press shift.  Lame.  Maybe implement proper Caps/Num/Scroll Locks

