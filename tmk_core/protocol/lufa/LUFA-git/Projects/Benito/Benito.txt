/** \file
 *
 *  This file contains special DoxyGen information for the generation of the main page and other special
 *  documentation pages. It is not a project source file.
 */

/** \mainpage Benito Arduino Programmer Project
 *
 *  \section Sec_Compat Project Compatibility:
 *
 *  The following list indicates what microcontrollers are compatible with this project.
 *
 *  \li Series 7 USB AVRs (AT90USBxxx7)
 *  \li Series 6 USB AVRs (AT90USBxxx6)
 *  \li Series 4 USB AVRs (ATMEGAxxU4)
 *  \li Series 2 USB AVRs (AT90USBxx2, ATMEGAxxU2)
 *
 *  \section Sec_Info USB Information:
 *
 *  The following table gives a rundown of the USB utilization of this project.
 *
 * <table>
 *  <tr>
 *   <td><b>USB Mode:</b></td>
 *   <td>Device</td>
 *  </tr>
 *  <tr>
 *   <td><b>USB Class:</b></td>
 *   <td>Communications Device Class (CDC)</td>
 *  </tr>
 *  <tr>
 *   <td><b>USB Subclass:</b></td>
 *   <td>Abstract Control Model (ACM)</td>
 *  </tr>
 *  <tr>
 *   <td><b>Relevant Standards:</b></td>
 *   <td>USBIF CDC Class Standard \n
 *       Arduino Bootloader Specification</td>
 *  </tr>
 *  <tr>
 *   <td><b>Supported USB Speeds:</b></td>
 *   <td>Full Speed Mode</td>
 *  </tr>
 * </table>
 *
 *  \section Sec_Description Project Description:
 *
 *  Firmware for a USB AVR powered programmer for Arduino boards using the official Arduino bootloader. This
 *  project acts like a regular USB to Serial bridge, except that asserting the DTR line will cause a pulse
 *  to appear on a given port pin, to control the target's /RESET pin.
 *
 *  This is primarily designed to fit the Benito board from www.dorkbotpdx.org, but will suit all USB AVRs.
 *
 *  After running this project for the first time on a new computer, you will need to supply the .INF file located
 *  in this project's directory as the device's driver when running under Windows. This will enable Windows to use
 *  its inbuilt CDC drivers, negating the need for custom drivers for the device. Other Operating Systems should
 *  automatically use their own inbuilt CDC-ACM drivers.
 *
 *  \section Sec_Options Project Options
 *
 *  The following defines can be found in this project, which can control the project behaviour when defined, or changed in value.
 *
 *  <table>
 *   <tr>
 *    <th><b>Define Name:</b></th>
 *    <th><b>Location:</b></th>
 *    <th><b>Description:</b></th>
 *   </tr>
 *   <tr>
 *    <td>AVR_RESET_LINE_PORT</td>
 *    <td>AppConfig.h</td>
 *    <td>Indicates the PORT register of the pin used to generate the target /RESET line pulse.</td>
 *   </tr>
 *   <tr>
 *    <td>AVR_RESET_LINE_DDR</td>
 *    <td>AppConfig.h</td>
 *    <td>Indicates the DDR register of the pin used to generate the target /RESET line pulse.</td>
 *   </tr>
 *   <tr>
 *    <td>AVR_RESET_LINE_MASK</td>
 *    <td>AppConfig.h</td>
 *    <td>Indicates the mask of the pin used to generate the target /RESET line pulse.</td>
 *   </tr>
 *   <tr>
 *    <td>AVR_RESET_PULSE_MS</td>
 *    <td>AppConfig.h</td>
 *    <td>Pulse length in milliseconds for the target /RESET pulse.</td>
 *   </tr>
 *   <tr>
 *    <td>TX_RX_LED_PULSE_MS</td>
 *    <td>AppConfig.h</td>
 *    <td>Pulse length in milliseconds for the activity Tx/Rx LEDs.</td>
 *   </tr>
 *   <tr>
 *    <td>PING_PONG_LED_PULSE_MS</td>
 *    <td>AppConfig.h</td>
 *    <td>Pulse length in milliseconds for the enumeration LED ping-ponging between toggles.</td>
 *   </tr>
 *   <tr>
 *    <td>RECEIVE_BUFFER_FLUSH_MS</td>
 *    <td>AppConfig.h</td>
 *    <td>Period between flushings of received data buffer to the attached USB host.</td>
 *   </tr>
 *  </table>
 */

